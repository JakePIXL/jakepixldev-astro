---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import { formatDate } from "../utils/date";
import "../style/global.postcss";

interface Props {
	post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
const {
	data: { title, tags, description, publishDate } = {
		title: "",
		tags: [],
		description: "",
		publishDate: "",
	},
	slug,
} = post || {};

const date = new Date(publishDate);
const datetime = date.toISOString();
const postDate = formatDate(date);
const imgUrl = new URL(`/og-image/${slug}.png`, Astro.url).href;
const { headings } = await post.render();
---

<Layout title={title} ogImage={imgUrl} description={description} articleDate={postDate}>
	<main class="h-full min-w-full flex-grow space-y-6 px-4">
		<h1 class="mb-0 border-b-2 pb-4 text-2xl tracking-wide">{title}</h1>
		<div class="flex w-full flex-row items-center justify-between">
			<time datetime={datetime} class="text-sm text-gray-600 md:text-base">{postDate}</time>
			<ul class="flex flex-row gap-1 md:gap-2">
				{
					tags.map((tag: string) => (
						<li>
							<a href="#" class="badge badge-sm">
								{tag}
							</a>
						</li>
					))
				}
			</ul>
		</div>

		<div
			class="prose dark:prose-invert md:prose-lg prose-h2:border-l-4 prose-h2:border-blue-500 prose-h2:pl-4 prose-ol:pl-12 prose-img:border-2 dark:prose-img:border-slate-700"
		>
			<slot />
		</div>
	</main>
</Layout>
